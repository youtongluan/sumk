v2.3.1
1、将JsonUtil改为S.json
2、sdb和mybatis的配置文件可以打包到jar中

v2.3.2
1、增加jetty端口被占用时的重试功能，默认重试将近2分钟。通过http.bind.retry=0可以关闭重试功能。
2、sdb的xml配置文件中，dtd不再通过网络获取。
3、去掉MD5Util和S.md5，增加S.hasher
4、去掉EncryUtil，增加S.encryptor

v2.3.3
1、增加redis的存活检测，在redis无法连接的时候，快速失败。
2、增加工具类S.beans的方法

v2.3.4
1、增加RedisConfig工具类
2、因为Observer接口从java9开始被标注为不推荐使用。所以AppInfo中使用Consumer代替Observer接口
3、增加SimpleLogger接口和SimpleLoggerHolder类。这个是配置等跟日志同级的模块使用的
4、允许soa和web使用自定义的线程池
5、重构主键生成的代码
6、支持在微服务中配置随机端口。端口值为0表示随机端口
7、修复鹰眼跟踪的bug
8、将分布式锁的入口改到S类中

v2.3.5
1、修复日志级别的一个bug
2、修改分布式锁的类名称

v2.3.6
1、修复orm事件的bug

v2.3.7
1、限制rest接口只支持get和post，其中get方法仅用于测试，它有可能使用浏览器缓存
2、将Base64Util改为S.base64，并且修改了工具类S中许多工具的名称
3、ThreadContext改名为ActionContext

v2.3.8
1、去掉对dbcp2连接池的硬编码依赖
2、几个名称微调
3、将日志的代码行参数默认值改为true

v2.3.9
1、AbstractSessionServlet改名为AbstractLoginServlet，并且添加了一个方法
2、整理日志的模块名
3、去掉Log.printStack(Throwable e)方法
4、Transaction的NORMAL改名为REQUIRED，EMBED改名为REQUIRES_NEW

v2.4.0
1、在配置文件中，soa开头的改为sumk.rpc开头。http开头的改为sumk.http开头
2、将RedisCallBack等单方法的接口改为java自带的接口
3、md5的结果从原来的大写方式改为小写方式

v2.4.1
1、将Class.newInstance()改为使用构造器初始化，这是因为java12开始，该方法被列为不推荐使用
2、http和微服务的名称支持逗号分隔
3、日志level的分隔符，从原来的逗号扩展到逗号和分号都可以

v2.4.2
1、S.base64增加2个小方法
2、SystemConfig.keys()的返回值，从Collection改为Set

v2.5.0
1、ORM去掉了withnull属性，改为自动判断。如果开发者传递的参数是pojo对象，会将pojo中null字段排除掉，如果传递的是map，其中的null字段会被保留。比如作为where条件，它将会作为IS NULL条件
2、ORM中的update去掉根据redis主键更新的方法
3、S.bean去掉无参的beanToMap方法。
4、Plugin接口的stop方法提供默认方法。
5、HttpUtil增加获取request和response的方法
6、优化字节码处理

v2.5.1
1、优化分布式session的存取性能
2、去掉http对redis的显式依赖
3、去掉session中对象的修改功能
4、去掉session根据不同客户端类型定制超时时间的功能

v2.5.2
1、去掉sumk.log.type参数，如果要切换日志类型需要手工调用api（这个是冷门需求）
2、将app.properties的获取机制简单化

v2.5.3
1、将HttpUtil改名为WebUtil
2、允许动态调整核心线程池的容量
3、去掉SimpleBizException类，将BizException的构造方法改为私有，改为使用create方法创建

v2.6.0
1、重构数据库连接的获取方式，增加读连接的升级功能
2、提供默认的微服务日志

v2.6.1
1、优化微服务的日志
2、数据库连接AutoCommit的控制从连接池改为框架内置控制
3、去掉了Cached注解及相关功能

v2.6.2
1、按参数顺序调用的Rpc接口，允许接口发布后再添加参数
2、限制日志body的长度，默认1000，后面用省略号替代

v2.6.3
1、SumkDate的毫秒时间，允许末尾的0省略掉(如果全是0，保留1个就行)
2、系统启动的时候，将原来一些同步启动的方法改为异步多线程启动，加快启动速度
3、改进本机ip的获取方式

v2.6.4
1、Select增加不等于比较符

v2.6.5
1、 select增加对IS NOT NULL的支持
2、修改web和rpc拦截器接口的定义
3、添加web是否支持get请求的开关
4、将后台任务线程改为正常模式，然后去除了SumkServer.main()的无限阻塞
5、添加web接口名是否大小写敏感的开关，默认铭感。

v2.6.6
1、优化http的日志功能

v2.6.7
1、http允许开发者指定默认接口，如果接口找不到就会进入该接口
2、允许通过sumk.redis.disconnect.null配置，指定在redis服务器异常的时候，是抛异常还是返回null
3、通过sumk.redis.conf.**来配置redis连接池的默认属性

v2.7.0
1、精简redis接口，并去掉与jedis包的直接耦合
2、修改redis的配置方式
3、优化日志级别判定的性能
4、对依赖包的版本做了一次集体升级

v2.7.1
1、修复sumk-log与spring boot、阿波罗配置中心一起使用时，spring日志的堆栈溢出问题

v2.7.2
1、在2.7.0中，将jedis升级到2.10.x后，之前版本的jedis需要手工构建JedisPool对象。现修复这个问题
2、@Box事务支持AutoCommit模式
3、只是Pojo使用byte[]和String映射Blob和Clob类型
4、修改@Column、@Param的一些属性名称

v2.7.3
1、增加工具类M，一般用于消息提示，通过与AppInfo的搭配，也可以实现国际化的目的
2、增加@RequestBody注解，用于支持http的流传输
3、去掉了http的客户类型功能（即@Web的type），因为这个功能感觉很鸡肋
4、增加类似dubbo那种，直接用接口注册和调用的微服务。目前对泛型返回值支持不好，如有需要，需借助JsonTypes工具


v2.7.5
1、可以统一对http服务的出错信息进行定制
2、当s.log.xxx的配置只有一个路径时，path:这个前缀可以省略
3、当web服务没有定义入参的时候，可以通过HttpServletRequest的InputStream来读取输入流

v.2.7.6
1、将工具类S的属性改为方法
2、AES默认加密方式改为CBC
3、默认的配置管理增加对System参数的读取，但不监听System中参数的变更

v2.7.7
1、新增@CreateTime注解，它的作用是新增记录的时候，会自动传入创建时间，并且与id保持一致
2、统一日志独立为特殊日志，并且有纯配置方式改为代码与配置相结合的方式
3、优化了日志输出的方式
4、优化了作业调度并提供Task类
5、redis支持原生cluster模式
6、去掉了groupId。appId使用分隔符方式可以起到groupId一样的效果

v2.7.8
1、增加慢sql的耗时日志

v2.7.9
1、SDB的xml增加items标签
2、SDB增加builder方法

v2.8.0
1、rpc的协议做了变更，不能与2.8之前的微服务进行交互
2、优化SumkDate性能
3、WebFileter和RpcFilter调用下一个Filter方法改为callNextFilter
4、Redis增加mute()方法，调用之后，如果发生异常，会用null来代替抛出异常

v2.8.1
1、文件上传改为基于servlet3的MultiPart模式，而不是commons-upload。同时去掉对commons-upload的依赖。相应的，WebUtil的getUploadFiles()改名为getMultiParts，UploadFile类改为MultipartItem
2、StreamUtil的extractData改名为readAllBytes

v2.8.2
1、@Web的requestEncrypt改为requestType,responseEncrypt改为responseType。对应的EncryptType类型改名为MessageType，NONE属性改名为PLAIN，AES改名为ENCRYPT
2、去掉@ErrorHandler，这个用法较冷门，通过WebFilter接口也能轻松实现
3、LoginObject的error方法改名为fail
4、提供加密接口的明文调试功能

v2.8.3
1、sumk.http.fusing支持头尾*匹配，并且放宽对接口书写格式的要求
2、移除CollectionUtil.unmodifyList()方法移除第二个参数
3、SDB的selectOne改名为queryOne
4、@CreateTime改名为@AutoCreateTime，并且无论是否主键是自动生成的，该注解都生效
5、Select的byPrimaryId方法改名为byDatabaseId
6、DBType和TransactionType改了下包名位置
7、web响应增加s-trace头部，它用于跟踪日志

v2.8.4
1、统一日志增加sumk.unionlog.exclude参数，并修复异常信息打印的问题
2、增加SumkExceptionCode接口，用于定义一些重要的框架异常码，方便开发者提示错误信息

v2.8.5
1、s.log.day等日志配置增加exclude过滤条件
2、@Param参数增加对空字符串的过滤

v2.9.0
1、zk和http方式的统一配置支持多节点模式
2、http错误码由原来的499改为550
3、个别地方性能优化

v2.9.1
1、DB部分更新支持字段为null
2、支持设置用户session最长的存活时间

v2.9.2
1、登录时的加密key改为通过header传递
2、修复Select中缓存跟数据库数据重复的bug
3、lock增加动态设置锁超时的功能
4、@Web添加tags属性 

v2.9.3
1、SumkDate支持在DB和SDB中使用，但不支持mbatis、hibernate等外置数据库操作
2、支持使用配置的方式替代@SoaClass注解
3、S.bean()支持日期类型、数字类型的模糊匹配
4、@Web添加method属性
5、SumkServer.main增加class参数，以支持sumk.jar和工程代码不在一个classloader里

v2.9.4
1、@Param支持pojo以及数组方式
2、BizException允许通过配置输出堆栈
3、WebUtil和RpcUtil提供所有参数组成的map，并且map的遍历顺序与参数顺序一致
4、通过sumk.db.default可以配置默认的数据库名称
5、修改SDB的包名

v2.9.5
1、SDB的count改为返回long
2、s.http.response.header.开头的配置会被添加到web的响应header中

v2.9.6
1、将@Web的requireLogin默认值改为true，但是默认禁用，要配置sumk.http.login.enable=1才能启用

v2.9.7
1、StreamUtil改名为IOUtil
2、@Inject去掉beanClz()和handler()
3、接口文档增加一级属性的模糊搜索功能，比如name用_name=XX来搜索
4、微服务增加发送失败自动重发的机制
5、修改StartConstants和StartContext的包名

v2.9.8
1、增加@ExcludeInParams和@ExcludeInResponse，它用来标识dto中非参数字段或不是用于返回的字段。在web和rpc中都有效
2、允许pojo中存在跟@SoftDelete同名的字段，以达到复用软删除标识位的目的。这种情况下，往往只有一种状态是标识删除，其它状态都是非删除的
3、去掉sumk.db.default参数，增加s.alias.db.{name}参数
4、BeanPropertiesWatcher接口改名为BeanInjectWatcher

v2.9.9
1、支持对配置中的redis密码进行加密
2、http接口支持名称相同，但是http方法不同的情况，并且支持接口的前缀匹配。对于前缀匹配的情况，WebUtil.getUrlLeft()可以获取剩下的url内容
3、SumkException的状态码全部改为负数，以跟BizException进行区分
4、将redis和数据库的初始化移到Plugin的prepare阶段，同时去掉Plugins类。修改之后，startAsyn阶段的数据库和redis都已经准备好了，不需要再用Plugins来判断

v2.9.10
1、对于常见的注解，使用相应Spec将它包装起来，以支持自定义注解。同时移除HttpActionNode的web()方法，upload()也改为返回UploadSpec

v2.9.11
1、接口方式的rpc调用，如果返回值是泛型，不再需要手工调用JsonTypes进行注册
2、去掉@Param的custom属性，但是保留ParamSpec的custom属性，开发者可以通过这里的custom进行扩展

v2.9.12
1、添加BootWatcher接口，该接口允许在IOC启动前做一些操作
2、DB添加commit和rollback两个hook
3、增加对数据源的操作统计

v2.10.0
1、使用字节码等方式替换原有的http、rpc入参解析方式，减少反射引起动态生成class类
2、CalleeNode中的部分以arg开头的方法，改名为param开头，去掉isEmptyArgument方法，增加paramLength方法
3、微服务支持sumk.zkurl不配置（服务端和客户端都支持），这时候的rpc只能调用本进程里的微服务接口
4、DB钩子（hook）增加ON_COMMIT和CLOSED两种，并且入参从Runable改为Consumer
5、增加sumk.db.name.lowercase参数，用于将默认的表名和字段名改为小写，自定义名称不受本参数影响。这个原先需要通过注入自定义的实现类来实现
6、数据库selec类增加in方法，并且允许同一种比较出现两次，比如： name != '张三' and name != '李四'

v2.10.1
1、Select增加notIn方法，用于sql中的not in()
2、简单的in查询、selectColumns指定查询列也都能使用缓存了
3、RecordRepository的包名改为org.yx.db.visit
4、除了默认的redis缓存外，还允许自定义缓存实现类
5、修改AbstractCachable的cacheEnable方法，这个只在自动生成的代码(sumk-codetool)里使用
6、@Bean增加辅助注解@ConditionOnPropert，支持组合关系：并且（用,或&&分隔)以及或者(用||分隔)。其中onMatch属性用来做取反操作
7、改进SumkDate转String的性能

v2.10.2
1、Select的offset、limit增加最大值1万的限制。可以通过代码突破这个限制。这意味着开发人员知道该语句比较耗性能
2、细节优化以提升性能或降低内存使用。比如用List或数组替代map，将一些计数器从Atomic类型改为普通类型等
3、提供监听器功能。监听器实现SumkListener接口，然后使用相应的EventBus发布事件。sumk-server-demo工程中InfoListener是它的使用例子
4、去掉DBEventListener接口，使用SumkListener改写数据库事件监听。sumk-server-demo工程中TableListener是它的使用例子
5、@Inject增加value属性，该属性强制指定注入bean的名称
6、去掉RedisUtil工具类(基本也用不到)，增加Redis2接口

v3.0.0
1、Redis2接口改为Redis3x，并增加增加发布订阅方法。依赖的jedis从2.x升级到3.7.0
2、监听器增加异步功能，同时支持异步发布事件以及异步监听两种模式
3、配置文件的sumk.jetty开头的配置改为sumk.webserver开头
4、列表为基础的Map替代HashMap作为小Map使用，以压缩内存的的占用。从SBuilder.listMap()可以获取到
5、slf4j支持\\{}转义
6、除data外，其它http rest请求的paramter名称都在前面加_，比如sign改为_sign，这些参数不常用
7、重构rpc的序列化协议，并把mina改为netty。mina的支持移到sumk-rpc-mina项目中
8、升级了许多依赖包的版本，这些依赖包用原来的版本也是兼容的

与2.x不兼容的地方
1、两者的rpc协议不同，不能互相通信
2、http的sign、act、plainKey参数前面增加了_
3、Redis2接口改为Redis3x

v3.0.1
1、去掉Attachable接口，RpcUtil.attachments()改为RpcUtil

v3.1.0
最主要的是将rpc透传数据的最大长度从255提升到60K，这个造成微服务跟旧版不兼容(无透传时仍然可以调用)
1、@Inject增加allowMulti属性，允许存在多个bean的情况下，取第一个注入
2、Select增加and方法，可以处理or表达式，也可以处理自定义的比较表达式
3、去掉Select的addEquals方法（此方法意义不大，增加理解成本），开发者通过多次调用addEqual来实现
4、优化DB代码，减少中间过程内存的使用量，并优化sql语句中的空格。不等号统一改为<>

v3.1.1
1、UserSession的loadUserObject()改名为loadAndRefresh()，这个方法开发者一般也很少用到
2、增加Const.LISTENER_DB_MODIFY_ON_COMMIT类型监听器，它在事务提交前监听，能够操作数据库
3、ModifyEvent可以获取被影响条数，并且支持boolean类型的传参

v3.1.2
1、增加BeanProvider接口，IOC通过BeanProvider获取bean。方便与Spring等第三方IOC对接

v3.2.0
1、异常码从int类型改为String类型（int方式入参仍保留）。旧用户在客户端升级前，可通过sumk.http.interrorcode=1让返回值使用int方式
2、允许自定义数据库事务的实现
3、BizException的堆栈信息改为默认打印，可以通过sumk.bizexception.fullstack=0来关闭

v4.0.0
1、增加aop拦截器
2、将sumk工程拆分为base、framewrok、db、http、rpc五个工程，加上早就分出去的async-logger、sumk-rpc-mina，总共7个

v4.0.1
1、取消SumkException的code为负数的限制，并且将内置的负数改为正数

v4.0.2
1、新增对国际化的支持，主要类是I18n，并去掉工具类M。web和rpc对locale的解析和设置需要自己通过filter去实现
2、优化日志实现

v4.1.0
1、框架初始化改为多线程并行初始化，加快启动速度
2、支持自定义注册中心，内置注册中心还是zk
3、修改内置的分布式主键生成器，旧项目请在配置文件中添加sumk.seq.version=1
